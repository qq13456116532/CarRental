@page "/confirm"
@using System.ComponentModel.DataAnnotations
@using Services
@inject HttpClient Http
@inject NavigationManager Navigation
@inject AuthService AuthService
@using Data
<EditForm Model="pageData" OnValidSubmit="HandleJiesuan">
    <DataAnnotationsValidator />
    <div class="order-form">
        <div class="order-details">
            <h3>订单明细</h3>
            <div class="list-container">
                <div class="list-th">
                    <span>商品名称</span>
                    <span>价格</span>
                    <span>数量</span>
                    <span>操作</span>
                </div>
                <div class="list">
                    <div class="items">
                        <div class="book">
                            <img src="@pageData.Cover" alt="商品图片" />
                            <h2>@pageData.Title</h2>
                        </div>
                        <div class="pay">&yen;@pageData.Price</div>
                        <InputNumber @bind-Value="pageData.Count" Min="1" Max="10" />
                        <img src="images/delete-icon.svg" class="delete" alt="删除商品" />
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group remark-address-group">
            <div class="remark-group compact">
                <h3>备注</h3>
                <InputTextArea class="remark-input" @bind-Value="pageData.Remark" Placeholder="输入备注信息，100字以内" />
            </div>
            <div class="address-group compact">
                <h3>收货地址</h3>
                @if (!string.IsNullOrEmpty(pageData.ReceiverAddress))
                {
                    <div class="address-details">
                        <span>收件人：</span><br>
                        <span>@pageData.ReceiverName</span><br>
                        <span>@pageData.ReceiverPhone</span><br>
                        <div>@pageData.ReceiverAddress</div><br>
                    </div>
                }
                else
                {
                    <div class="no-address">
                        <span>目前暂无地址信息，请</span>
                        <button class="add-address" @onclick="HandleAdd">新建地址</button>
                    </div>
                }
            </div>
        </div>

        <div class="checkout-section">
            <h3>结算</h3>
            <div class="price-view">
                <div class="price-item">
                    <div>商品总价</div>
                    <div>&yen;@pageData.Amount</div>
                </div>
                <div class="price-item">
                    <div>商品优惠</div>
                    <div>&yen;0</div>
                </div>
                <div class="price-item">
                    <div>商品折扣</div>
                    <div>&yen;0</div>
                </div>
                <div class="total-price">
                    <span>合计</span>
                    <div>&yen;@pageData.Amount</div>
                </div>
                <div class="action-buttons">
                    <button class="btn-back" @onclick="HandleBack">返回</button>
                    <button class="btn-submit" type="submit">结算</button>
                </div>
            </div>
        </div>
    </div>
</EditForm>


   

@code {
    private PageData pageData = new PageData();
    private ModalData modal = new ModalData();
    [Parameter] public required string id{get;set;}
    [Parameter] public required string title{get;set;}
    [Parameter] public required string cover{get;set;}
    [Parameter] public required string price{get;set;}


    protected override void OnInitialized()
    {
        pageData.Id = id??"default"; // Example initialization, replace with actual logic
        pageData.Title = title??"default";
        pageData.Cover = cover??"images/electric_car.jpg";
        pageData.Price = price??"100";
        if(decimal.TryParse(pageData.Price,out var o)){
            pageData.Amount = o;
        }
 
        ListAddressData();
    }

    private async void HandleAdd()
    {
        var parameters = new Dictionary<string, object>();
        parameters.Add("buttonName","新增");
        parameters.Add("OnClickClose",EventCallback.Factory.Create<MouseEventArgs>(this,OnBoostrapModalClickClose));

    }


    private void OnCountChange(ChangeEventArgs e)
    {
        if (int.TryParse(e.Value?.ToString(), out int count))
        {
            pageData.Count = count;
            if(decimal.TryParse(pageData.Price,out var o)){
                pageData.Amount = o * count;
            }
        }
    }

    private void HandleBack()
    {
        // Logic to navigate back
    }
    public async void OnBoostrapModalClickClose(){
    }
    private async void HandleJiesuan()
    {
        var parameters = new Dictionary<string, object>();
        parameters.Add("modal", modal);
        parameters.Add("OnClickClose",EventCallback.Factory.Create<MouseEventArgs>(this,OnBoostrapModalClickClose));

        if (string.IsNullOrEmpty(pageData.ReceiverName))
        {
            // Show message: Please select an address.
            return;
        }

        // Logic to create the order and redirect to payment
    }

    private async void ListAddressData()
    {
        // Placeholder logic for listing address data
        pageData.ReceiverName = "John Doe";
        pageData.ReceiverPhone = "123456789";

        pageData.ReceiverAddress = "123 Main St, City, Country";

        // 获取用户 token（假设 token 已存储在 localStorage 中）
        string token = AuthService.UserToken??"0";
        // 构造请求体
        var requestUrl = $"{Navigation.BaseUri}api/Index/addresses?token={token}";

        // Send the GET request and deserialize the response into the detailData object.
        List<Address>? res = await Http.GetFromJsonAsync<List<Address>>(requestUrl);
        if(res!=null && res.Count!=0){
            //这里是暂时取第一个
            pageData.ReceiverName = res[0].Name;
            pageData.ReceiverPhone = res[0].Mobile;
            pageData.ReceiverAddress = res[0].Def;
            pageData.Remark = res[0].Description;
        }else{
            //用默认值
            pageData.ReceiverName = "default";
            pageData.ReceiverPhone = "default";
            pageData.ReceiverAddress = "default";
            pageData.Remark = "default";
        }
            

    }
    public class PageData
    {
        public string? Id { get; set; }
        public string? Title { get; set; }
        public string? Cover { get; set; }
        public string Price { get; set; }
        public int Count { get; set; } = 1;
        public decimal Amount { get; set; }
        public string? Remark { get; set; }
        public string? ReceiverName { get; set; }
        public string? ReceiverPhone { get; set; }
        public string? ReceiverAddress { get; set; }
    }

    
}