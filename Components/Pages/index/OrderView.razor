@page "/orderView"
@inject HttpClient Http
@inject NavigationManager Navigation
@using Services
@inject AuthService AuthService
<div class="content-list">
    <div class="list-title">我的预订</div>
    <div class="list-content">
        @if (orderData?.Any() ?? false)
        {
            @foreach (var item in orderData)
            {
                <div class="order-item-view">
                    <div class="header flex-view">
                        <div class="left">
                            <span class="text">编号</span>
                            <span class="num mg-4">#</span>
                            <span class="num">@item.OrderNumber</span>
                            <span class="time">@item.OrderTime</span>
                        </div>
                        <div class="right">
                            @if (item.Status == "1")
                            {
                                <button class="btn btn-primary btn-sm" style="margin-right: 24px;" @onclick="() => HandleCancel(item)">取消</button>
                            }
                        </div>
                    </div>
                    <div class="content flex-view">
                        <div class="left-list">
                            <div class="list-item flex-view">
                                <img src="@item.Cover" class="thing-img" alt="cover">
                                <div class="detail flex-between flex-view">
                                    <div class="flex-between flex-top flex-view">
                                        <h2 class="name">@item.Title</h2>
                                        <span class="count">@item.Count</span>
                                    </div>
                                    <div class="flex-between flex-center flex-view">
                                        <span class="price">&yen;@item.Price</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="bottom flex-view">
                        <div class="left">
                            <span class="text">共 @item.Count 辆</span>
                            <span class="open" @onclick="() => HandleDetail(item.ThingId)">详情</span>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div>暂无订单。</div>
        }
    </div>
</div>

@code {
    private List<OrderDto> orderData = new();
    
    private string orderStatus = "1";

    protected override async Task OnInitializedAsync()
    {
        await GetOrderList();
    }

    @* private async Task OnTabChange(string key)
    {
        orderStatus = key switch
        {
            "1" => "",
            "2" => "1",
            "3" => "2",
            _ => orderStatus
        };
        await GetOrderList();
    } *@

    private async Task GetOrderList()
    {
        try
        {
            var response = await Http.GetFromJsonAsync<List<OrderDto>>($"{Navigation.BaseUri}api/Index/orders/{orderStatus}?token={AuthService.UserToken}");
            if (response != null)
            {
                foreach (var item in response)
                {
                    if (!string.IsNullOrEmpty(item.Cover))
                    {
                        item.Cover = $"images/{item.Cover}";
                    }
                }
                orderData = response;
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }

    private void HandleDetail(long thingId)
    {
        var uri = $"/detail?id={thingId}";
        Navigation.NavigateTo(uri, true);
    }

    private async Task HandleCancel(OrderDto item)
    {
        try
        {
            var response = await Http.DeleteAsync($"{Navigation.BaseUri}api/Index/orders/{item.Id}?token={AuthService.UserToken}");
            if (response.IsSuccessStatusCode)
            {
                orderData.Remove(item);
                Console.WriteLine("取消成功");
            }
            else
            {
                Console.WriteLine("取消失败");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }



}